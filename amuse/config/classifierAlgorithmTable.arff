% Classification algorithms

@RELATION algorithms

% Unique algorithm ID 
@ATTRIBUTE Id NUMERIC
% Algorithm name
@ATTRIBUTE Name STRING
% Algorithm category
@ATTRIBUTE Category {"Unsupervised>Partitional", "Unsupervised>Hierarchical", "Supervised", "Supervised>Trees", "Mixed"}
% Java class which runs classification training
@ATTRIBUTE TrainerAdapterClass STRING
% Java class which runs classification
@ATTRIBUTE ClassifierAdapterClass STRING
% Algorithm home folder (e.g. if an external tool is used)
@ATTRIBUTE HomeFolder STRING
% Algorithm start script for adapter only if external tool is used (otherwise please set to -1)
@ATTRIBUTE StartScript STRING
% Base script for trainer
@ATTRIBUTE InputBaseTrainingBatch STRING
% Script for trainer (after the parameters / options were saved to base script)
@ATTRIBUTE InputTrainingBatch STRING
% Base script for classifier
@ATTRIBUTE InputBaseClassificationBatch STRING
% Script for classifier (after the parameters / options were saved to base script)
@ATTRIBUTE InputClassificationBatch STRING
% Description of algorithm
@ATTRIBUTE AlgorithmDescription STRING
% Names of parameters for this algorithm
@ATTRIBUTE ParameterNames STRING
% Regular expression which describes allowed definition ranges for algorithm parameters
@ATTRIBUTE ParameterDefinitions STRING
% Default parameter values
@ATTRIBUTE DefaultParameterValues STRING
% Descriptions of parameters
@ATTRIBUTE ParameterDescriptions STRING
% Attributes that describes what kind of task the algorithms support
@ATTRIBUTE SupportsBinary NUMERIC
@ATTRIBUTE SupportsContinuous NUMERIC
@ATTRIBUTE SupportsMulticlass NUMERIC
@ATTRIBUTE SupportsMultilabel NUMERIC
@ATTRIBUTE SupportsSinglelabel NUMERIC
@ATTRIBUTE SupportsSupervised NUMERIC
@ATTRIBUTE SupportsUnsupervised NUMERIC
@ATTRIBUTE SupportsRegression NUMERIC

@DATA
% Supervised methods
0, "J48", "Supervised>Trees", amuse.nodes.trainer.methods.supervised.J48Adapter, amuse.nodes.classifier.methods.supervised.RapidMinerModelLoader, "RapidMiner5", -1, -1, -1, -1, -1, "C4.5 learner from Weka Toolbox", "C:", "[%d]", "[0.25]", "Confidence threshold for pruning", 1, 0, 0, 0, 1, 1, 0, 0

1, "RandomForest", "Supervised>Trees", amuse.nodes.trainer.methods.supervised.RandomForestAdapter, amuse.nodes.classifier.methods.supervised.RapidMinerModelLoader, "RapidMiner5", -1, -1, -1, -1, -1, "Random forest learner from Weka Toolbox", "Number of trees:", "[%i]", "[10]", "The number of decision trees", 1, 0, 1, 0, 1, 1, 0, 0

2, "LinearDiscriminantAnalysis", "Supervised", amuse.nodes.trainer.methods.supervised.LinearDiscriminantAnalysisAdapter, amuse.nodes.classifier.methods.supervised.LinearDiscriminantAnalysisAdapter, "MatlabClassification", "matlabStart.sh", -1, -1, -1, -1, "Linear Discriminant Analysis",  "", "", "", "", 1, 0, 0, 0, 1, 1, 0, 0

3, "KNN", "Supervised", amuse.nodes.trainer.methods.supervised.KNNAdapter, amuse.nodes.classifier.methods.supervised.RapidMinerModelLoader, "RapidMiner5", -1, -1, -1, -1, -1, "k-nearest neighbours", "Number of neigbours:", "[%i]", "[1]", "The number of neighbours", 1, 0, 1, 0, 1, 1, 0, 0

4, "NaiveBayes", "Supervised", amuse.nodes.trainer.methods.supervised.NaiveBayesAdapter, amuse.nodes.classifier.methods.supervised.RapidMinerModelLoader, "RapidMiner5", -1, -1, -1, -1, -1, "Naive Bayes learner", "", "", "", "", 1, 0, 1, 0, 1, 1, 0, 0

5, "SupportVectorMachine", "Supervised", amuse.nodes.trainer.methods.supervised.SVMAdapter, amuse.nodes.classifier.methods.supervised.RapidMinerModelLoader, "RapidMiner5", -1, -1, -1, -1, -1, "Support Vector Machine JMySVMLearner", "Kernel:|Kernel gamma:|Kernel degree:|Kernel a:|Kernel b:|C:|Epsilon:", "[%n{dot,radial,polynomial,neural} %d %d %d %d %d %d]", "[dot_1.0_2.0_1.0_0.0_0.0_0.0]", "The SVM kernel type|The SVM kernel parameter gamma (for radial kernel only)|The SVM kernel parameter degree (for polynomial kernel only)|The SVM kernel parameter a (for neural kernel only)|The SVM kernel parameter b (for neural kernel only)|The SVM complexity constant|Insensitivity constant", 1, 0, 0, 0, 1, 1, 0, 0

6, "FKNN", "Supervised", amuse.nodes.trainer.methods.supervised.FKNNAdapter, amuse.nodes.classifier.methods.supervised.FKNNAdapter, "", -1, -1, -1, -1, -1, "fuzzy k-nearest neighbours", "Number of neighbours:", "[%i]", "[1]", "The number of neighbours", 1, 1, 1, 1, 1, 1, 0, 0

% Unsupervised methods
7, "Fast k-Means", "Unsupervised>Partitional", amuse.nodes.classifier.methods.unsupervised.FastKMeansAdapter, amuse.nodes.classifier.methods.unsupervised.FastKMeansAdapter, "RapidMiner9", -1,-1,-1,-1,-1, "Unsupervised fast k-Means clustering from RapidMiner", "k:|Max optimization steps:|Max runs:|Distance Measure:|Determine good start values:|Use a local random seed:|Local random seed:", "[%i %i %i %n{EuclideanDistance,CamberraDistance,ChebychevDistance,CorrelationSimilarity,CosineSimilarity,DiceSimilarity,DynamicTimeWarpingDistance,InnerProductSimilarity,JaccardSimilarity,KernelEuclideanDistance,ManhattanDistance,MaxProductSimilarity,OverlapSimilarity} %b %b %i]", "[5_100_10_EuclideanDistance_true_false_1992]", "The number of clusters to be generated|The maximal number of optimization steps|The maximal number of runs|Distance measure to be used|Determine good start values|Indicates if a local random seed should be used|Specifies the local random seed", 1,1,1,0,1,0,1,0

8, "X-Means", "Unsupervised>Partitional", amuse.nodes.classifier.methods.unsupervised.XMeansAdapter, amuse.nodes.classifier.methods.unsupervised.XMeansAdapter, "RapidMiner9", -1,-1,-1,-1,-1, "Unsupervised x-Means clustering from RapidMiner", "k min:|k max:|Max runs:|Max optimization steps:|Distance Measure:|Determine good start values:", "[%i %i %i %i %n{EuclideanDistance,CamberraDistance,ChebychevDistance,CorrelationSimilarity,CosineSimilarity,DiceSimilarity,DynamicTimeWarpingDistance,InnerProductSimilarity,JaccardSimilarity,KernelEuclideanDistance,ManhattanDistance,MaxProductSimilarity,OverlapSimilarity} %b]", "[3_60_30_100_EuclideanDistance_true]", "The minimal number of clusters to be generated|The maximal number of clusters to be generated| The maximal number of runs|The maximal number of optimization steps|Distance measure to be used|Determine good start values", 1,1,1,0,1,0,1,0

9, "k-Medoids", "Unsupervised>Partitional", amuse.nodes.classifier.methods.unsupervised.KMedoidsAdapter, amuse.nodes.classifier.methods.unsupervised.KMedoidsAdapter, "RapidMiner9", -1,-1,-1,-1,-1, "Unsupervised k-Medoids clustering from RapidMiner", "k:|Max optimization steps:|Max runs:|Distance Measure:|Use a local random seed:|Local random seed:", "[%i %i %i %n{EuclideanDistance,CamberraDistance,ChebychevDistance,CorrelationSimilarity,CosineSimilarity,DiceSimilarity,DynamicTimeWarpingDistance,InnerProductSimilarity,JaccardSimilarity,KernelEuclideanDistance,ManhattanDistance,MaxProductSimilarity,OverlapSimilarity} %b %i]", "[5_100_10_EuclideanDistance_false_1992]", "The number of clusters to be generated|The maximal number of optimization steps|The maximal number of runs|Distance measure to be used|Indicates if a local random seed should be used|Specifies the local random seed", 1,1,1,0,1,0,1,0

10, "DBScan", "Unsupervised>Partitional", amuse.nodes.classifier.methods.unsupervised.DBScanAdapter, amuse.nodes.classifier.methods.unsupervised.DBScanAdapter, "RapidMiner9", -1,-1,-1,-1,-1, "Unsupervised DBScanAdapter clustering from RapidMiner", "epsilon:|min points:|Distance Measure:", "[%d %i %n{EuclideanDistance,CamberraDistance,ChebychevDistance,CorrelationSimilarity,CosineSimilarity,DiceSimilarity,DynamicTimeWarpingDistance,InnerProductSimilarity,JaccardSimilarity,KernelEuclideanDistance,ManhattanDistance,MaxProductSimilarity,OverlapSimilarity}]", "[1.0_5_EuclideanDistance]", "Specifies the size of the neighborhood|Specifies the minimal number of points needed to form a cluster|Distance measure to be used", 1,1,1,0,1,0,1,0

11, "Support Vector Clustering (Dot, Radial, Polynomial)", "Unsupervised>Partitional", amuse.nodes.classifier.methods.unsupervised.SupportVectorClusteringAdapter, amuse.nodes.classifier.methods.unsupervised.SupportVectorClusteringAdapter, "RapidMiner9", -1,-1,-1,-1,-1, "Unsupervised Support Vector Clustering for the kernel types dot, radial and polynomial from RapidMiner", "Kernel type:|Cache size:|Number of sample points:|Kernel value:|Min number of points:|Convergence epsilon:|Max iterations:|p:|r:", "[%n{dot,radial,polynomial} %i %i %d %i %d %i %d %d]", "[radial_200_20_1.0_2_0.001_100000_0.0_-1.0]", "The SVM kernel type (dot, radial, polynomial)|Size of the cache for kernel evaluations in MB|The number of virtual sample points to check for neighborship|The SVM kernel parameter gamma (radial, default 1.0) / degree (polynomial, default 2)|The minimal number of points in each cluster|Precision on the KKT conditions|Stop after this many iterations|The fraction of allowed outliers|Use this radius instead of the calculated one (-1 for calculated radius)", 1,1,1,0,1,0,1,0

12, "Support Vector Clustering (Neural)", "Unsupervised>Partitional", amuse.nodes.classifier.methods.unsupervised.SVCNeuralAdapter, amuse.nodes.classifier.methods.unsupervised.SVCNeuralAdapter, "RapidMiner9", -1,-1,-1,-1,-1, "Unsupervised Support Vector Clustering for the kernel type neural from RapidMiner", "Cache size:|Number of sample points:|Kernel a:|Kernel b:|Min number of points:|Convergence epsilon:|Max iterations:|p:|r:", "[%i %i %d %d %i %d %i %d %d]", "[200_20_1.0_0.0_2_0.001_100000_0.0_-1.0]", "Size of the cache for kernel evaluations in MB|The number of virtual sample points to check for neighborship|The SVM kernel parameter a|The SVM kernel parameter b|The minimal number of points in each cluster|Precision on the KKT conditions|Stop after this many iterations|The fraction of allowed outliers|Use this radius instead of the calculated one (-1 for calculated radius)", 1,1,1,0,1,0,1,0

13, "Ward's Agglomeration", "Unsupervised>Hierarchical", amuse.nodes.classifier.methods.unsupervised.WardAdapter, amuse.nodes.classifier.methods.unsupervised.WardAdapter, "", -1,-1,-1,-1,-1, "Clustering using Wards Agglomeration", "Numerical Measure:|k:", "[%n{LWDissimilarityUpdateFormula,Classic} %i]", "[Classic_0]", "The numerical measure to be used|The desired number of clusters", 1,1,1,0,1,0,1,0
